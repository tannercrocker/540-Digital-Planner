@model Digital_Planner.Models.User

@{
    ViewBag.Title = "Schedule";
    var model_events = Model.Events;
}
<script type="text/javascript">
    function toggle_schedule(showID) {
        if (showID != null) {
            document.getElementById("day").style.display = 'none'
            document.getElementById("week").style.display = 'none'
            document.getElementById("month").style.display = 'none'
            if ("month_button".match(showID)) {
                document.getElementById("month").style.display = 'block'
                document.getElementById("schedule_text").innerHTML = 'Events of @DateTime.Today.ToString("MMMM") @DateTime.Today.Year'
            } else if ("week_button".match(showID)) {
                document.getElementById("week").style.display = 'block'
                document.getElementById("schedule_text").innerHTML = 'Schedule for the week'
            } else {
                document.getElementById("day").style.display = 'block'
                document.getElementById("schedule_text").innerHTML = 'Schedule for today: @DateTime.Today.ToString("MMMM"), @DateTime.Today.Day @DateTime.Today.Year'
            }
        }
    }
</script>

<h2 id="schedule_text">Schedule for today: @DateTime.Today.ToString("MMMM"), @DateTime.Today.Day @DateTime.Today.Year</h2>
<div class="row">
    <center>
        <button id="day_button" class="btn" onclick="toggle_schedule(this.id)" style="margin-right: 1%;">Today</button>
        <button id="week_button" class="btn" onclick="toggle_schedule(this.id)" style="margin-right: 1%;">Week</button>
        <button id="month_button" class="btn" onclick="toggle_schedule(this.id)" style="margin-right: 1%;">Month</button>
    </center>
</div>

<div id="schedule" class="row" style="margin-top:1%">
    
    @{ 
        /*
        var day_events = new HashSet<Digital_Planner.Models.Event>();

        (HashSet<Digital_Planner.Models.Event>)( model_events
        .Where(e => e.OccursAt.Year.Equals(DateTime.Today.Year) && e.OccursAt.DayOfYear.Equals(DateTime.Today.DayOfYear))
        .AsEnumerable().
        //.OrderBy(e => e.OccursAt)
        .GroupBy(e => e.OccursAt.DayOfYear)
        //.GroupBy(e => e.Category)
        );*/

        //Add year to where
        var evts = model_events
            .Where(e => e.OccursAt.DayOfYear.Equals(DateTime.Today.DayOfYear) && e.OccursAt.Year.Equals(DateTime.Today.Year))
            .GroupBy(e => e.CategoryID);
    }
    <div id="day" class="table">
        @Html.Partial("_Day", new Tuple<DateTime, ICollection<Digital_Planner.Models.Event>>(DateTime.Today, model_events))
                
        @*
        <table class="table table-hover table-responsive">
            <tr>
                <th>Category</th>
                <th>Time</th>
                <th>Title</th>
                <th>Completion Time</th>
                <th>Completed</th>
                <!-- Blank header for styling-->
                <th colspan="2">Edit</th>
            </tr>

            @{ var today_by_cats = Model.Events.Where(e => e.OccursAt.DayOfYear == DateTime.Today.DayOfYear || e.CompleteBy.DayOfYear == DateTime.Today.DayOfYear);}
            @foreach (var cat in today_by_cats.OrderBy(e => e.Priority).GroupBy(e => e.CategoryID))
            {
                @Html.Partial("_Category", cat)
            }
            @*Blank row for styling...*
            <tr>
                <td colspan="7"></td>
            </tr>
        </table>
        *@
    </div>


    <div id="week" class="table" style="display:none;">
        @Html.Partial("_Week", model_events)
   </div>
   
    <div id="month" class="container" style="display:none;">
        @Html.Partial("_Month", model_events)
    </div>
</div>
